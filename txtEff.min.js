getAllEffectTags = document.querySelectorAll(".txtEff");
let allEffectObjects = [];
function filterAllObjects(e) {
  return (filteredEffects = allEffectObjects.filter(t => t.effectName == e));
}
getAllEffectTags.forEach((e, t) => {
  (props = getAllEffectTags[t].attributes),
    (effectName = props.effect.value),
    (allEffectObjects[t] = { effectName: effectName, props: props, target: e });
});
let funcObject = {
  typing: function(e) {
    const t = e.props,
      l = e.target,
      r = t.text.value;
    l.innerHTML = "<span id='myText'></span><span id='cursor'>|</span>";
    let s = "300",
      a = "300",
      o = "yes",
      n = l.querySelector("#cursor"),
      c = l.querySelector("#myText"),
      p = [],
      f = 0,
      i = !1;
    t.repeat && (o = t.repeat.value),
      t.cursorspeed && (s = t.cursorspeed.value),
      t.typingspeed && (a = t.typingspeed.value),
      t.cursor && "no" == t.cursor.value && (n.innerHTML = "&nbsp;"),
      setInterval(() => {
        "1" == n.style.opacity
          ? (n.style.opacity = "0")
          : (n.style.opacity = "1");
      }, s),
      "no" == o &&
        r.split("").forEach((e, t) => {
          setTimeout(() => {
            (p[t] = r.split("")[t]), (c.innerHTML = p.join(""));
          }, a * t);
        }),
      setInterval(() => {
        "yes" == o &&
          (0 == i && p.length < r.length
            ? ((p[f] = r.split("")[f]), (c.innerHTML = p.join("")), f++)
            : (i = !0),
          p.length > 0 && 1 == i
            ? ((p.length = f), (c.innerHTML = p.join("")), f--)
            : (i = !1));
      }, a);
  },
  fade: function(e) {
    const t = e.props,
      l = e.target,
      r = t.text.value;
    let s = 50,
      a = 5;
    l.innerHTML = r.replace(
      /\S/g,
      "<span class='letter' style='opacity: 0;'>$&</span>"
    );
    const o = l.querySelectorAll(".letter");
    t.speedshowing && (s = t.speedshowing.value),
      t.speedfading && (a = t.speedfading.value),
      o.forEach((e, t) => {
        setTimeout(() => {
          let t = 0,
            l = setInterval(() => {
              t < 1 ? ((t += 0.01), (e.style.opacity = t)) : clearInterval(l);
            }, a);
        }, s * t);
      });
  },
  popUp: function(e) {
    const t = e.props,
      l = e.target,
      r = t.text.value;
    l.innerHTML = r.replace(
      /\S/g,
      "<span class='letter' style='display: inline-block'>$&</span>"
    );
    let s = l.querySelectorAll(".letter"),
      a = "2",
      o = "pointer",
      n = "red",
      c = "",
      p = getComputedStyle(e.target);
    t.sizeup && (a = t.sizeup.value),
      t.color && (n = t.color.value),
      t.cursor && (o = t.cursor.value),
      t.move && (c = t.move.value),
      s.forEach(e => {
        e.addEventListener("mouseover", e => {
          let l = "",
            r = 25;
          a.value < 2 && (r = 5 * t.sizeup.value),
            "up" == c && (l = `translateY(-${r}%)`),
            "down" == c && (l = `translateY(${r}%)`),
            (e.target.style.transform = `scale(${a}) ${l}`),
            (e.target.style.cursor = o),
            (e.target.style.color = n);
        }),
          e.addEventListener("mouseout", e => {
            (e.target.style = p), (e.target.style.display = "inline-block");
          });
      });
  },
  color: function(e) {
    const t = e.props,
      l = e.target,
      r = t.text.value;
    l.innerHTML = r.replace(/\S/g, "<span class='letter'>$&</span>");
    const s = l.querySelectorAll(".letter");
    let a = 200,
      o = [
        "red",
        "blue",
        "green",
        "yellow",
        "pink",
        "gray",
        "orange",
        "purple"
      ];
    t.colors && (o = t.colors.value.split(" ")),
      t.speed && (a = t.speed.value),
      setInterval(() => {
        s.forEach(e => {
          let t = o[Math.floor(Math.random() * o.length)];
          e.style.color = t;
        });
      }, a);
  }
};
filterAllObjects("typing").forEach(e => funcObject.typing(e)),
  filterAllObjects("fade").forEach(e => funcObject.fade(e)),
  filterAllObjects("popUp").forEach(e => funcObject.popUp(e)),
  filterAllObjects("color").forEach(e => funcObject.color(e));
